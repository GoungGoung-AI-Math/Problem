/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.example.demo.my.kafka.infra.avrobuild;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AttemptAnalysisRequestAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2050946079721870637L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AttemptAnalysisRequestAvroModel\",\"namespace\":\"com.example.demo.my.kafka.infra.avrobuild\",\"fields\":[{\"name\":\"attemptId\",\"type\":\"long\"},{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"AnalysisType\",\"symbols\":[\"ATTEMPT\",\"QUESTION\"]}},{\"name\":\"contents\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ReqContentUnion\",\"fields\":[{\"name\":\"content\",\"type\":[{\"type\":\"record\",\"name\":\"ReqTextContent\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"MessageType\",\"symbols\":[\"TEXT\",\"IMAGE_URL\"]}},{\"name\":\"text\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]},{\"type\":\"record\",\"name\":\"ReqImageContent\",\"fields\":[{\"name\":\"type\",\"type\":\"MessageType\"},{\"name\":\"encodedImage\",\"type\":{\"type\":\"record\",\"name\":\"EncodedImage\",\"fields\":[{\"name\":\"url\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}}]}]}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AttemptAnalysisRequestAvroModel> ENCODER =
      new BinaryMessageEncoder<AttemptAnalysisRequestAvroModel>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AttemptAnalysisRequestAvroModel> DECODER =
      new BinaryMessageDecoder<AttemptAnalysisRequestAvroModel>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AttemptAnalysisRequestAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AttemptAnalysisRequestAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AttemptAnalysisRequestAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AttemptAnalysisRequestAvroModel>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AttemptAnalysisRequestAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AttemptAnalysisRequestAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AttemptAnalysisRequestAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AttemptAnalysisRequestAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private long attemptId;
   private com.example.demo.my.kafka.infra.avrobuild.AnalysisType type;
   private java.util.List<com.example.demo.my.kafka.infra.avrobuild.ReqContentUnion> contents;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AttemptAnalysisRequestAvroModel() {}

  /**
   * All-args constructor.
   * @param attemptId The new value for attemptId
   * @param type The new value for type
   * @param contents The new value for contents
   */
  public AttemptAnalysisRequestAvroModel(java.lang.Long attemptId, com.example.demo.my.kafka.infra.avrobuild.AnalysisType type, java.util.List<com.example.demo.my.kafka.infra.avrobuild.ReqContentUnion> contents) {
    this.attemptId = attemptId;
    this.type = type;
    this.contents = contents;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return attemptId;
    case 1: return type;
    case 2: return contents;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: attemptId = (java.lang.Long)value$; break;
    case 1: type = (com.example.demo.my.kafka.infra.avrobuild.AnalysisType)value$; break;
    case 2: contents = (java.util.List<com.example.demo.my.kafka.infra.avrobuild.ReqContentUnion>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'attemptId' field.
   * @return The value of the 'attemptId' field.
   */
  public long getAttemptId() {
    return attemptId;
  }


  /**
   * Sets the value of the 'attemptId' field.
   * @param value the value to set.
   */
  public void setAttemptId(long value) {
    this.attemptId = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public com.example.demo.my.kafka.infra.avrobuild.AnalysisType getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(com.example.demo.my.kafka.infra.avrobuild.AnalysisType value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'contents' field.
   * @return The value of the 'contents' field.
   */
  public java.util.List<com.example.demo.my.kafka.infra.avrobuild.ReqContentUnion> getContents() {
    return contents;
  }


  /**
   * Sets the value of the 'contents' field.
   * @param value the value to set.
   */
  public void setContents(java.util.List<com.example.demo.my.kafka.infra.avrobuild.ReqContentUnion> value) {
    this.contents = value;
  }

  /**
   * Creates a new AttemptAnalysisRequestAvroModel RecordBuilder.
   * @return A new AttemptAnalysisRequestAvroModel RecordBuilder
   */
  public static com.example.demo.my.kafka.infra.avrobuild.AttemptAnalysisRequestAvroModel.Builder newBuilder() {
    return new com.example.demo.my.kafka.infra.avrobuild.AttemptAnalysisRequestAvroModel.Builder();
  }

  /**
   * Creates a new AttemptAnalysisRequestAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AttemptAnalysisRequestAvroModel RecordBuilder
   */
  public static com.example.demo.my.kafka.infra.avrobuild.AttemptAnalysisRequestAvroModel.Builder newBuilder(com.example.demo.my.kafka.infra.avrobuild.AttemptAnalysisRequestAvroModel.Builder other) {
    if (other == null) {
      return new com.example.demo.my.kafka.infra.avrobuild.AttemptAnalysisRequestAvroModel.Builder();
    } else {
      return new com.example.demo.my.kafka.infra.avrobuild.AttemptAnalysisRequestAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new AttemptAnalysisRequestAvroModel RecordBuilder by copying an existing AttemptAnalysisRequestAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new AttemptAnalysisRequestAvroModel RecordBuilder
   */
  public static com.example.demo.my.kafka.infra.avrobuild.AttemptAnalysisRequestAvroModel.Builder newBuilder(com.example.demo.my.kafka.infra.avrobuild.AttemptAnalysisRequestAvroModel other) {
    if (other == null) {
      return new com.example.demo.my.kafka.infra.avrobuild.AttemptAnalysisRequestAvroModel.Builder();
    } else {
      return new com.example.demo.my.kafka.infra.avrobuild.AttemptAnalysisRequestAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for AttemptAnalysisRequestAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AttemptAnalysisRequestAvroModel>
    implements org.apache.avro.data.RecordBuilder<AttemptAnalysisRequestAvroModel> {

    private long attemptId;
    private com.example.demo.my.kafka.infra.avrobuild.AnalysisType type;
    private java.util.List<com.example.demo.my.kafka.infra.avrobuild.ReqContentUnion> contents;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.example.demo.my.kafka.infra.avrobuild.AttemptAnalysisRequestAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.attemptId)) {
        this.attemptId = data().deepCopy(fields()[0].schema(), other.attemptId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.type)) {
        this.type = data().deepCopy(fields()[1].schema(), other.type);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.contents)) {
        this.contents = data().deepCopy(fields()[2].schema(), other.contents);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
    }

    /**
     * Creates a Builder by copying an existing AttemptAnalysisRequestAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(com.example.demo.my.kafka.infra.avrobuild.AttemptAnalysisRequestAvroModel other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.attemptId)) {
        this.attemptId = data().deepCopy(fields()[0].schema(), other.attemptId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.type)) {
        this.type = data().deepCopy(fields()[1].schema(), other.type);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.contents)) {
        this.contents = data().deepCopy(fields()[2].schema(), other.contents);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'attemptId' field.
      * @return The value.
      */
    public long getAttemptId() {
      return attemptId;
    }


    /**
      * Sets the value of the 'attemptId' field.
      * @param value The value of 'attemptId'.
      * @return This builder.
      */
    public com.example.demo.my.kafka.infra.avrobuild.AttemptAnalysisRequestAvroModel.Builder setAttemptId(long value) {
      validate(fields()[0], value);
      this.attemptId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'attemptId' field has been set.
      * @return True if the 'attemptId' field has been set, false otherwise.
      */
    public boolean hasAttemptId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'attemptId' field.
      * @return This builder.
      */
    public com.example.demo.my.kafka.infra.avrobuild.AttemptAnalysisRequestAvroModel.Builder clearAttemptId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public com.example.demo.my.kafka.infra.avrobuild.AnalysisType getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public com.example.demo.my.kafka.infra.avrobuild.AttemptAnalysisRequestAvroModel.Builder setType(com.example.demo.my.kafka.infra.avrobuild.AnalysisType value) {
      validate(fields()[1], value);
      this.type = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public com.example.demo.my.kafka.infra.avrobuild.AttemptAnalysisRequestAvroModel.Builder clearType() {
      type = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'contents' field.
      * @return The value.
      */
    public java.util.List<com.example.demo.my.kafka.infra.avrobuild.ReqContentUnion> getContents() {
      return contents;
    }


    /**
      * Sets the value of the 'contents' field.
      * @param value The value of 'contents'.
      * @return This builder.
      */
    public com.example.demo.my.kafka.infra.avrobuild.AttemptAnalysisRequestAvroModel.Builder setContents(java.util.List<com.example.demo.my.kafka.infra.avrobuild.ReqContentUnion> value) {
      validate(fields()[2], value);
      this.contents = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'contents' field has been set.
      * @return True if the 'contents' field has been set, false otherwise.
      */
    public boolean hasContents() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'contents' field.
      * @return This builder.
      */
    public com.example.demo.my.kafka.infra.avrobuild.AttemptAnalysisRequestAvroModel.Builder clearContents() {
      contents = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AttemptAnalysisRequestAvroModel build() {
      try {
        AttemptAnalysisRequestAvroModel record = new AttemptAnalysisRequestAvroModel();
        record.attemptId = fieldSetFlags()[0] ? this.attemptId : (java.lang.Long) defaultValue(fields()[0]);
        record.type = fieldSetFlags()[1] ? this.type : (com.example.demo.my.kafka.infra.avrobuild.AnalysisType) defaultValue(fields()[1]);
        record.contents = fieldSetFlags()[2] ? this.contents : (java.util.List<com.example.demo.my.kafka.infra.avrobuild.ReqContentUnion>) defaultValue(fields()[2]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AttemptAnalysisRequestAvroModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<AttemptAnalysisRequestAvroModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AttemptAnalysisRequestAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<AttemptAnalysisRequestAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










